def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// 打包签名文件配置
def keyProperties = new Properties()
def keyPropertiesFile = rootProject.file("key.properties")
if (keyPropertiesFile.exists()) {
    keyPropertiesFile.withReader('UTF-8') { reader -> keyProperties.load(reader)
    }
} else {
    throw new GradleException("File key.properties not found.")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.yuro.example"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        manifestPlaceholders = [
                appName: "yuro",
        ]
    }

    signingConfigs {
        debug {
            storeFile file(keyProperties.getProperty('debug.storeFile'))
            storePassword keyProperties.getProperty('debug.storePassword')
            keyAlias keyProperties.getProperty('debug.keyAlias')
            keyPassword keyProperties.getProperty('debug.keyPassword')
        }

        release {
            storeFile file(keyProperties.getProperty('release.storeFile'))
            storePassword keyProperties.getProperty('release.storePassword')
            keyAlias keyProperties.getProperty('release.keyAlias')
            keyPassword keyProperties.getProperty('release.keyPassword')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
            multiDexEnabled true
            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'channel'

    productFlavors {
        // 生产环境
        prod {
            dimension 'channel'
            manifestPlaceholders = [
                    appName: "yuro",
            ]
        }
        // 测试环境
        beta {
            dimension 'channel'
            applicationIdSuffix ".beta"
            manifestPlaceholders = [
                    appName: "yuro(beta)",
            ]
        }

        // 开发环境
        dev {
            dimension 'channel'
            applicationIdSuffix ".dev"
            manifestPlaceholders = [
                    appName: "yuro(dev)",
            ]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
